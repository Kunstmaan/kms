#!/usr/bin/env bash
# Usage: kms vagrant [folder]
# Summary: Creates a vagrant config for a project
# Help: Creates a vagrant config for a project

cat << 'EOF' > $1/Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant::Config.run do |config|
  config.vm.box = "kdeploy-quantal32"
  config.vm.box_url = "https://vagrant.kunstmaan.be/kdeploy-quantal32.box"
  PROJECT=File.basename(File.dirname(__FILE__)).gsub(/\s+/, "").downcase # or customize by hand!
  config.vm.share_folder("data", "/home/projects/#{PROJECT}", ".", :nfs => true)
  config.vm.customize ["modifyvm", :id, "--memory", 512]
  config.vm.network :hostonly, "33.33.33.33"
  config.ssh.forward_agent = true
  # Using https://github.com/mosaicxm/vagrant-hostmaster
  config.vm.host_name = "#{PROJECT}.dev.kunstmaan.be"
  config.hosts.aliases = "www.#{PROJECT}.dev.kunstmaan.be"
  config.vm.provision :shell, :inline => "chmod 750 /etc/sudoers && echo 'Defaults env_keep+=SSH_AUTH_SOCK' >> /etc/sudoers"
  config.vm.provision :shell, :inline => "su - postgres -c \"psql -c \\\"DROP DATABASE IF EXISTS #{PROJECT};\\\"\""
  config.vm.provision :shell, :inline => "echo \"drop database IF EXISTS #{PROJECT}\" | mysql -u root -pvagrant"
  config.vm.provision :shell, :inline => "cd /opt/kDeploy/tools; python maintenance.py; service apache2 restart; service php5-fpm restart"
end
EOF
